- name: Variables in Play Level
  hosts: all
  vars:
    URL: varaible.example.com
  tasks:
    - name: Print URL
      ansible.builtin.debug:
        msg: URL = {{URL}}
#Note: If you declare a variable in play level all the tasks can access variable.

- name: Variables from file in Play Level
  hosts: all
  vars_files:
   - sample-vars.yml
  tasks:
    - name: Print URL
      ansible.builtin.debug:
        msg: URL = {{URL}}
#Note: We can load all the variables from a file, since it is on play level, all tasks can access those variables.

- name: Variables on task level
  hosts: all
  tasks:
    - name: Print URL in Task1
      ansible.builtin.debug:
        msg: URL == {{URL}}
      vars:
        URL: task1.example.com
    - name: Print URL in Taks2
      ansible.builtin.debug:
        msg: URL == {{URL}}
      vars:
        URL: task2.example.com
#Note: Scope of task variable is only that task, the other tasks cannot access the other tasks variables.

- name: Inventory Variable
  hosts: all
  tasks:
    - name: Print URL
      ansible.builtin.debug:
        msg: URL == {{URL}}

##Variable Precedence

- name: Variable Precedence
  hosts: all
  vars:
    URL: play.example.com
  vars_files:
    - sample-vars.yml
  tasks:
    - name: Print URL
      ansible.builtin.debug:
        msg: URL == {{URL}}
      vars:
        URL: task.example.com

# Print a hostname of remote node

- name: Print remote host details
  hosts: all
  tasks:
    - name: Print Hostname
      ansible.builtin.debug:
        msg: Hostname = {{ansible_hostname}}
    - name: Print host CPU Infornamtion
      ansible.builtin.debug:
        msg: "{{ansible_processor}}"

# Print a runtime variable from output of previous task.

- name: Register a Variable
  hosts: all
  tasks:
    - name: Run Uptime Commmand
      ansible.builtin.shell:
      register: OUT
    - name: Print OUT Variable
      ansible.builtin.debug:
        msg: "{{OUT.stdout}}"
